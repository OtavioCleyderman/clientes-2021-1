{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Otavio/Documents/GitHub/clientes-2021-1/clientes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"C:/Users/Otavio/Documents/GitHub/clientes-2021-1/clientes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:/Users/Otavio/Documents/GitHub/clientes-2021-1/clientes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/Otavio/Documents/GitHub/clientes-2021-1/clientes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import TextField from'@material-ui/core/TextField';import MenuItem from'@material-ui/core/MenuItem';import InputMask from'react-input-mask';import{makeStyles}from'@material-ui/core/styles';import Toolbar from'@material-ui/core/Toolbar';import Button from'@material-ui/core/Button';import axios from'axios';import{useHistory,useParams}from'react-router-dom';import Snackbar from'@material-ui/core/Snackbar';import MuiAlert from'@material-ui/lab/Alert';import ConfirmDialog from'../ui/ConfirmDialog';import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{form:{display:'flex',justifyContent:'space-around',flexWrap:'wrap',maxWidth:'80%',margin:'0 auto','& .MuiFormControl-root':{minWidth:'200px',maxWidth:'500px',margin:'0 24px 24px 0'}},toolbar:{display:'flex',width:'100%',justifyContent:'space-around',marginTop:'36px'},importado:{'& .MuiFormControlLabel-root':{display:'block'}}};});export default function ClientesForm(){var classes=useStyles();var estados=['AC','AL','AP','AM','BA','CE','DF','ES','GO','MA','MT','MS','MG','PA','PB','PR','PE','PI','RJ','RN','RS','RO','RR','SC','SP','SE','TO'];// Classes de caracters para a máscara da placa\n// somente dígitos ~> [0-9]\nvar formatChars={'0':'[0-9]'};// Máscara para CPF\nvar cpfMask='000.000.000-00';// Máscara para RG\nvar rgMask='00.000.000';// Máscara para o telefone\nvar telMask='(00)0000-0000';var _useState=useState({id:null,nome:'',cpf:'',rg:'',logradouro:'',num_imovel:'',complemento:'',bairro:'',municipio:'',uf:'',telefone:'',email:''}),_useState2=_slicedToArray(_useState,2),cliente=_useState2[0],setCliente=_useState2[1];var _useState3=useState({disabled:false,label:'Enviar'}),_useState4=_slicedToArray(_useState3,2),sendBtnStatus=_useState4[0],setSendBtnStatus=_useState4[1];var _useState5=useState({open:false,severity:'success',message:''}),_useState6=_slicedToArray(_useState5,2),sbStatus=_useState6[0],setSbStatus=_useState6[1];var _useState7=useState({nome:'',cpf:'',rg:'',logradouro:'',num_imovel:'',complemento:'',bairro:'',municipio:'',uf:'',telefone:'',email:''}),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isModified=_useState10[0],setIsModified=_useState10[1];var _useState11=useState('Cadastrar novo cliente'),_useState12=_slicedToArray(_useState11,2),title=_useState12[0],setTitle=_useState12[1];var history=useHistory();var params=useParams();// useEffect() para quando o formulário for carregado (só na inicialização)\nuseEffect(function(){// Verificamos se a rota atual contém o parâmetro id\n// Em caso positivo, buscamos os dados no back-end e carregamos o formulário para edição\nif(params.id){setTitle('Editar cliente');getData(params.id);}},[]);function getData(_x){return _getData.apply(this,arguments);}function _getData(){_getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"https://api.faustocintra.com.br/clientes/\".concat(id));case 3:response=_context.sent;setCliente(response.data);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);setSbStatus({open:true,severity:'error',message:\"Não foi possível carregar os dados para edição.\"});case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return _getData.apply(this,arguments);}var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),dialogOpen=_useState14[0],setDialogOpen=_useState14[1];// O diálogo de confirmação está aberto?\nfunction handleInputChange(event,property){var clienteTemp=_objectSpread({},cliente);if(event.target.id)property=event.target.id;if(property==='bairro'){clienteTemp.bairro=event.target.value.toUpperCase();}else{// Quando o nome de uma propriedade de objeto aparece entre [],\n// significa que o nome da propriedade será determinado pela\n// variável ou expressão contida dentro dos colchetes\nclienteTemp[property]=event.target.value;}setCliente(clienteTemp);setIsModified(true);// O formulário foi modificado\nvalidate(clienteTemp);// Dispara a validação\n}function validate(data){var isValid=true;var errorTemp={nome:'',cpf:'',rg:'',logradouro:'',num_imovel:'',complemento:'',bairro:'',municipio:'',uf:'',telefone:'',email:''};// trim(): retira espaços em branco do início e do final de uma string\nif(data.nome.trim()===''){errorTemp.nome='O nome deve ser preenchido';isValid=false;}if(data.logradouro.trim()===''){errorTemp.logradouro='O logradouro deve ser preenchido';isValid=false;}if(data.num_imovel.trim()===''){errorTemp.num_imovel='O número do imóvel deve ser preenchido';isValid=false;}if(data.bairro.trim()===''){errorTemp.bairro='O bairro deve ser preenchido';isValid=false;}if(data.municipio.trim()===''){errorTemp.municipio='O município deve ser preenchido';isValid=false;}if(data.uf.trim()===''){errorTemp.uf='A UF deve ser informada';isValid=false;}// O CPF não pode ser string vazia nem conter sublinhado\nif(data.cpf.trim()===''||data.cpf.includes('_')){errorTemp.cpf='O CPF deve ser preenchido corretamente';isValid=false;}// O RG não pode ser string vazia nem conter sublinhado\nif(data.rg.trim()===''||data.rg.includes('_')){errorTemp.rg='O RG deve ser preenchido corretamente';isValid=false;}// O telefone não pode ser string vazia nem conter sublinhado\nif(data.telefone.trim()===''||data.telefone.includes('_')){errorTemp.telefone='O telefone deve ser preenchido corretamente';isValid=false;}if(data.email.trim()===''){errorTemp.email='O e-mail deve ser preenchido';isValid=false;}setError(errorTemp);return isValid;}function saveData(){return _saveData.apply(this,arguments);}function _saveData(){_saveData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;// Desabilita o botão de enviar para evitar envios duplicados\nsetSendBtnStatus({disabled:true,label:'Enviando...'});// Se estivermos editando, precisamos enviar os dados com o verbo HTTP PUT\nif(!params.id){_context2.next=7;break;}_context2.next=5;return axios.put(\"https://api.faustocintra.com.br/clientes/\".concat(params.id),cliente);case 5:_context2.next=9;break;case 7:_context2.next=9;return axios.post('https://api.faustocintra.com.br/clientes',cliente);case 9:// Mostra a SnackBar \nsetSbStatus({open:true,severity:'success',message:'Dados salvos com sucesso!'});_context2.next=15;break;case 12:_context2.prev=12;_context2.t0=_context2[\"catch\"](0);// Mostra a SnackBar\nsetSbStatus({open:true,severity:'error',message:'ERRO: '+_context2.t0.message});case 15:// Restaura o estado inicial do botão de envio\nsetSendBtnStatus({disabled:false,label:'Enviar'});case 16:case\"end\":return _context2.stop();}}},_callee2,null,[[0,12]]);}));return _saveData.apply(this,arguments);}function handleSubmit(event){event.preventDefault();// Evita que a página seja recarregada\n// Só envia para o banco de dados se o formulário for válido\nif(validate(cliente))saveData();}function handleSbClose(){setSbStatus(_objectSpread(_objectSpread({},sbStatus),{},{open:false}));// Retorna para a página de listagem em caso de sucesso\nif(sbStatus.severity==='success')history.push('/list');}function handleDialogClose(result){setDialogOpen(false);// Se o usuário realmente deseja voltar\nif(result)history.push('/list');}function handleGoBack(){// se o formulário tiver sido modificado, exibimos o diálogo de confirmação\nif(isModified)setDialogOpen(true);// Senão, podemos voltar diretamente para a listagem\nelse history.push('/list');}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ConfirmDialog,{isOpen:dialogOpen,onClose:handleDialogClose,children:\"H\\xE1 dados n\\xE3o salvos. Deseja realmente voltar?\"}),/*#__PURE__*/_jsx(Snackbar,{open:sbStatus.open,autoHideDuration:6000,onClose:handleSbClose,children:/*#__PURE__*/_jsx(MuiAlert,{elevation:6,variant:\"filled\",onClose:handleSbClose,severity:sbStatus.severity,children:sbStatus.message})}),/*#__PURE__*/_jsx(\"h1\",{children:title}),/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(TextField,{id:\"nome\",label:\"Nome\",variant:\"filled\",value:cliente.nome,onChange:handleInputChange,required:true/* not null, precisa ser preenchido */,placeholder:\"Informe o nome do cliente\",fullWidth:true,error:error.nome!=='',helperText:error.nome}),/*#__PURE__*/_jsx(InputMask,{id:\"cpf\",mask:cpfMask,formatChars:formatChars,value:cliente.cpf,onChange:function onChange(event){return handleInputChange(event,'cpf');},children:function children(){return/*#__PURE__*/_jsx(TextField,{label:\"CPF\",variant:\"filled\",required:true/* not null, precisa ser preenchido */,placeholder:\"Informe o CPF do cliente\",fullWidth:true,error:error.cpf!=='',helperText:error.cpf});}}),/*#__PURE__*/_jsx(InputMask,{id:\"rg\",mask:rgMask,formatChars:formatChars,value:cliente.rg,onChange:function onChange(event){return handleInputChange(event,'rg');},children:function children(){return/*#__PURE__*/_jsx(TextField,{label:\"RG\",variant:\"filled\",required:true/* not null, precisa ser preenchido */,placeholder:\"Informe o RG do cliente\",fullWidth:true,error:error.rg!=='',helperText:error.rg});}}),/*#__PURE__*/_jsx(TextField,{id:\"logradouro\",label:\"Logradouro\",variant:\"filled\",value:cliente.logradouro,onChange:handleInputChange,required:true/* not null, precisa ser preenchido */,placeholder:\"Informe o logradouro do cliente\",fullWidth:true,error:error.logradouro!=='',helperText:error.logradouro}),/*#__PURE__*/_jsx(TextField,{id:\"num_imovel\",label:\"N\\xFAmero do im\\xF3vel\",variant:\"filled\",value:cliente.num_imovel,onChange:handleInputChange,required:true/* not null, precisa ser preenchido */,placeholder:\"Informe o n\\xFAmero do im\\xF3vel\",fullWidth:true,error:error.num_imovel!=='',helperText:error.num_imovel}),/*#__PURE__*/_jsx(TextField,{id:\"complemento\",label:\"Complemento\",variant:\"filled\",value:cliente.complemento,onChange:handleInputChange,placeholder:\"Informe o Complemento, se houver\",fullWidth:true,error:error.complemento!=='',helperText:error.complemento}),/*#__PURE__*/_jsx(TextField,{id:\"bairro\",label:\"Bairro\",variant:\"filled\",value:cliente.bairro,onChange:handleInputChange,required:true/* not null, precisa ser preenchido */,placeholder:\"Informe o bairro\",fullWidth:true,error:error.bairro!=='',helperText:error.bairro}),/*#__PURE__*/_jsx(TextField,{id:\"municipio\",label:\"Munic\\xEDpio\",variant:\"filled\",value:cliente.municipio,onChange:handleInputChange,required:true/* not null, precisa ser preenchido */,placeholder:\"Informe o munic\\xEDpio\",fullWidth:true,error:error.municipio!=='',helperText:error.municipio}),/*#__PURE__*/_jsx(TextField,{id:\"uf\",label:\"UF\",variant:\"filled\",value:cliente.uf,onChange:function onChange(event){return handleInputChange(event,'uf');},required:true/* not null, precisa ser preenchido */,placeholder:\"Informe a UF do munic\\xEDpio\",select:true,fullWidth:true,error:error.uf!=='',helperText:error.uf,children:estados.map(function(estado){return/*#__PURE__*/_jsx(MenuItem,{value:estado,children:estado},estado);})}),/*#__PURE__*/_jsx(InputMask,{id:\"telefone\",mask:telMask,formatChars:formatChars,value:cliente.telefone,onChange:function onChange(event){return handleInputChange(event,'telefone');},children:function children(){return/*#__PURE__*/_jsx(TextField,{label:\"telefone\",variant:\"filled\",required:true/* not null, precisa ser preenchido */,placeholder:\"Informe o telefone do cliente\",fullWidth:true,error:error.telefone!=='',helperText:error.telefone});}}),/*#__PURE__*/_jsx(TextField,{id:\"email\",label:\"E-mail\",variant:\"filled\",value:cliente.email,onChange:handleInputChange,required:true/* not null, precisa ser preenchido */,placeholder:\"Informe o e-mail do cliente\",fullWidth:true,error:error.email!=='',helperText:error.email}),/*#__PURE__*/_jsxs(Toolbar,{className:classes.toolbar,children:[/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"secondary\",disabled:sendBtnStatus.disabled,children:sendBtnStatus.label}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleGoBack,children:\"Voltar\"})]})]})]});}","map":{"version":3,"sources":["C:/Users/Otavio/Documents/GitHub/clientes-2021-1/clientes/src/routed/ClientesForm.js"],"names":["useState","useEffect","TextField","MenuItem","InputMask","makeStyles","Toolbar","Button","axios","useHistory","useParams","Snackbar","MuiAlert","ConfirmDialog","React","useStyles","theme","form","display","justifyContent","flexWrap","maxWidth","margin","minWidth","toolbar","width","marginTop","importado","ClientesForm","classes","estados","formatChars","cpfMask","rgMask","telMask","id","nome","cpf","rg","logradouro","num_imovel","complemento","bairro","municipio","uf","telefone","email","cliente","setCliente","disabled","label","sendBtnStatus","setSendBtnStatus","open","severity","message","sbStatus","setSbStatus","error","setError","isModified","setIsModified","title","setTitle","history","params","getData","get","response","data","dialogOpen","setDialogOpen","handleInputChange","event","property","clienteTemp","target","value","toUpperCase","validate","isValid","errorTemp","trim","includes","saveData","put","post","handleSubmit","preventDefault","handleSbClose","push","handleDialogClose","result","handleGoBack","map","estado"],"mappings":"4rBAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,kBAAtB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,SAArB,KAAsC,kBAAtC,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,qBAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,6IAEA,GAAMC,CAAAA,SAAS,CAAGV,UAAU,CAAC,SAAAW,KAAK,QAAK,CACrCC,IAAI,CAAE,CACJC,OAAO,CAAE,MADL,CAEJC,cAAc,CAAE,cAFZ,CAGJC,QAAQ,CAAE,MAHN,CAIJC,QAAQ,CAAE,KAJN,CAKJC,MAAM,CAAE,QALJ,CAMJ,yBAA0B,CACxBC,QAAQ,CAAE,OADc,CAExBF,QAAQ,CAAE,OAFc,CAGxBC,MAAM,CAAE,eAHgB,CANtB,CAD+B,CAarCE,OAAO,CAAE,CACPN,OAAO,CAAE,MADF,CAEPO,KAAK,CAAE,MAFA,CAGPN,cAAc,CAAE,cAHT,CAIPO,SAAS,CAAE,MAJJ,CAb4B,CAmBrCC,SAAS,CAAE,CACT,8BAA+B,CAC7BT,OAAO,CAAE,OADoB,CADtB,CAnB0B,CAAL,EAAN,CAA5B,CA2BA,cAAe,SAASU,CAAAA,YAAT,EAAwB,CACrC,GAAMC,CAAAA,OAAO,CAAGd,SAAS,EAAzB,CAEA,GAAMe,CAAAA,OAAO,CAAG,CACd,IADc,CAEd,IAFc,CAGd,IAHc,CAId,IAJc,CAKd,IALc,CAMd,IANc,CAOd,IAPc,CAQd,IARc,CASd,IATc,CAUd,IAVc,CAWd,IAXc,CAYd,IAZc,CAad,IAbc,CAcd,IAdc,CAed,IAfc,CAgBd,IAhBc,CAiBd,IAjBc,CAkBd,IAlBc,CAmBd,IAnBc,CAoBd,IApBc,CAqBd,IArBc,CAsBd,IAtBc,CAuBd,IAvBc,CAwBd,IAxBc,CAyBd,IAzBc,CA0Bd,IA1Bc,CA2Bd,IA3Bc,CAAhB,CA+BA;AACA;AACA,GAAMC,CAAAA,WAAW,CAAG,CAClB,IAAK,OADa,CAApB,CAIA;AACA,GAAMC,CAAAA,OAAO,CAAG,gBAAhB,CACA;AACA,GAAMC,CAAAA,MAAM,CAAG,YAAf,CACA;AACA,GAAMC,CAAAA,OAAO,CAAG,eAAhB,CAMA,cAA8BlC,QAAQ,CAAC,CACrCmC,EAAE,CAAE,IADiC,CAErCC,IAAI,CAAE,EAF+B,CAGrCC,GAAG,CAAE,EAHgC,CAIrCC,EAAE,CAAE,EAJiC,CAKrCC,UAAU,CAAE,EALyB,CAMrCC,UAAU,CAAE,EANyB,CAOrCC,WAAW,CAAE,EAPwB,CAQrCC,MAAM,CAAE,EAR6B,CASrCC,SAAS,CAAE,EAT0B,CAUrCC,EAAE,CAAE,EAViC,CAWrCC,QAAQ,CAAE,EAX2B,CAYrCC,KAAK,CAAE,EAZ8B,CAAD,CAAtC,wCAAOC,OAAP,eAAgBC,UAAhB,eAiBA,eAA0ChD,QAAQ,CAAC,CACjDiD,QAAQ,CAAE,KADuC,CAEjDC,KAAK,CAAE,QAF0C,CAAD,CAAlD,yCAAOC,aAAP,eAAsBC,gBAAtB,eAKA,eAAgCpD,QAAQ,CAAC,CACvCqD,IAAI,CAAE,KADiC,CAEvCC,QAAQ,CAAE,SAF6B,CAGvCC,OAAO,CAAE,EAH8B,CAAD,CAAxC,yCAAOC,QAAP,eAAiBC,WAAjB,eAMA,eAA0BzD,QAAQ,CAAC,CACjCoC,IAAI,CAAE,EAD2B,CAEjCC,GAAG,CAAE,EAF4B,CAGjCC,EAAE,CAAE,EAH6B,CAIjCC,UAAU,CAAE,EAJqB,CAKjCC,UAAU,CAAE,EALqB,CAMjCC,WAAW,CAAE,EANoB,CAOjCC,MAAM,CAAE,EAPyB,CAQjCC,SAAS,CAAE,EARsB,CASjCC,EAAE,CAAE,EAT6B,CAUjCC,QAAQ,CAAE,EAVuB,CAWjCC,KAAK,CAAE,EAX0B,CAAD,CAAlC,yCAAOY,KAAP,eAAcC,QAAd,eAcA,eAAoC3D,QAAQ,CAAC,KAAD,CAA5C,0CAAO4D,UAAP,gBAAmBC,aAAnB,gBAEA,gBAA0B7D,QAAQ,CAAC,wBAAD,CAAlC,2CAAO8D,KAAP,gBAAcC,QAAd,gBAEA,GAAMC,CAAAA,OAAO,CAAGvD,UAAU,EAA1B,CACA,GAAMwD,CAAAA,MAAM,CAAGvD,SAAS,EAAxB,CAEA;AACAT,SAAS,CAAC,UAAM,CACd;AACA;AACA,GAAIgE,MAAM,CAAC9B,EAAX,CAAe,CACb4B,QAAQ,CAAC,gBAAD,CAAR,CACAG,OAAO,CAACD,MAAM,CAAC9B,EAAR,CAAP,CACD,CACF,CAPQ,CAON,EAPM,CAAT,CArGqC,QA8GtB+B,CAAAA,OA9GsB,iIA8GrC,iBAAuB/B,EAAvB,qKAEyB3B,CAAAA,KAAK,CAAC2D,GAAN,oDAAsDhC,EAAtD,EAFzB,QAEQiC,QAFR,eAGIpB,UAAU,CAACoB,QAAQ,CAACC,IAAV,CAAV,CAHJ,+EAMIZ,WAAW,CAAC,CACVJ,IAAI,CAAE,IADI,CAEVC,QAAQ,CAAE,OAFA,CAGVC,OAAO,CAAE,iDAHC,CAAD,CAAX,CANJ,oEA9GqC,0CA4HrC,gBAAoCvD,QAAQ,CAAC,KAAD,CAA5C,2CAAOsE,UAAP,gBAAmBC,aAAnB,gBAAoD;AAGpD,QAASC,CAAAA,iBAAT,CAA2BC,KAA3B,CAAkCC,QAAlC,CAA4C,CAE1C,GAAMC,CAAAA,WAAW,kBAAQ5B,OAAR,CAAjB,CAGA,GAAI0B,KAAK,CAACG,MAAN,CAAazC,EAAjB,CAAqBuC,QAAQ,CAAGD,KAAK,CAACG,MAAN,CAAazC,EAAxB,CACrB,GAAIuC,QAAQ,GAAK,QAAjB,CAA2B,CACzBC,WAAW,CAACjC,MAAZ,CAAqB+B,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,WAAnB,EAArB,CACD,CAFD,IAGK,CACH;AACA;AACA;AACAH,WAAW,CAACD,QAAD,CAAX,CAAwBD,KAAK,CAACG,MAAN,CAAaC,KAArC,CACD,CAED7B,UAAU,CAAC2B,WAAD,CAAV,CACAd,aAAa,CAAC,IAAD,CAAb,CAAsB;AACtBkB,QAAQ,CAACJ,WAAD,CAAR,CAAuB;AACxB,CAED,QAASI,CAAAA,QAAT,CAAkBV,IAAlB,CAAwB,CACtB,GAAIW,CAAAA,OAAO,CAAG,IAAd,CAEA,GAAMC,CAAAA,SAAS,CAAG,CAChB7C,IAAI,CAAE,EADU,CAEhBC,GAAG,CAAE,EAFW,CAGhBC,EAAE,CAAE,EAHY,CAIhBC,UAAU,CAAE,EAJI,CAKhBC,UAAU,CAAE,EALI,CAMhBC,WAAW,CAAE,EANG,CAOhBC,MAAM,CAAE,EAPQ,CAQhBC,SAAS,CAAE,EARK,CAShBC,EAAE,CAAE,EATY,CAUhBC,QAAQ,CAAE,EAVM,CAWhBC,KAAK,CAAE,EAXS,CAAlB,CAcA;AACA,GAAIuB,IAAI,CAACjC,IAAL,CAAU8C,IAAV,KAAqB,EAAzB,CAA6B,CAC3BD,SAAS,CAAC7C,IAAV,CAAiB,4BAAjB,CACA4C,OAAO,CAAG,KAAV,CACD,CAED,GAAIX,IAAI,CAAC9B,UAAL,CAAgB2C,IAAhB,KAA2B,EAA/B,CAAmC,CACjCD,SAAS,CAAC1C,UAAV,CAAuB,kCAAvB,CACAyC,OAAO,CAAG,KAAV,CACD,CAED,GAAIX,IAAI,CAAC7B,UAAL,CAAgB0C,IAAhB,KAA2B,EAA/B,CAAmC,CACjCD,SAAS,CAACzC,UAAV,CAAuB,wCAAvB,CACAwC,OAAO,CAAG,KAAV,CACD,CAED,GAAIX,IAAI,CAAC3B,MAAL,CAAYwC,IAAZ,KAAuB,EAA3B,CAA+B,CAC7BD,SAAS,CAACvC,MAAV,CAAmB,8BAAnB,CACAsC,OAAO,CAAG,KAAV,CACD,CAED,GAAIX,IAAI,CAAC1B,SAAL,CAAeuC,IAAf,KAA0B,EAA9B,CAAkC,CAChCD,SAAS,CAACtC,SAAV,CAAsB,iCAAtB,CACAqC,OAAO,CAAG,KAAV,CACD,CAED,GAAIX,IAAI,CAACzB,EAAL,CAAQsC,IAAR,KAAmB,EAAvB,CAA2B,CACzBD,SAAS,CAACrC,EAAV,CAAe,yBAAf,CACAoC,OAAO,CAAG,KAAV,CACD,CAED;AACA,GAAIX,IAAI,CAAChC,GAAL,CAAS6C,IAAT,KAAoB,EAApB,EAA0Bb,IAAI,CAAChC,GAAL,CAAS8C,QAAT,CAAkB,GAAlB,CAA9B,CAAsD,CACpDF,SAAS,CAAC5C,GAAV,CAAgB,wCAAhB,CACA2C,OAAO,CAAG,KAAV,CACD,CAED;AACA,GAAIX,IAAI,CAAC/B,EAAL,CAAQ4C,IAAR,KAAmB,EAAnB,EAAyBb,IAAI,CAAC/B,EAAL,CAAQ6C,QAAR,CAAiB,GAAjB,CAA7B,CAAoD,CAClDF,SAAS,CAAC3C,EAAV,CAAe,uCAAf,CACA0C,OAAO,CAAG,KAAV,CACD,CAED;AACA,GAAIX,IAAI,CAACxB,QAAL,CAAcqC,IAAd,KAAyB,EAAzB,EAA+Bb,IAAI,CAACxB,QAAL,CAAcsC,QAAd,CAAuB,GAAvB,CAAnC,CAAgE,CAC9DF,SAAS,CAACpC,QAAV,CAAqB,6CAArB,CACAmC,OAAO,CAAG,KAAV,CACD,CAED,GAAIX,IAAI,CAACvB,KAAL,CAAWoC,IAAX,KAAsB,EAA1B,CAA8B,CAC5BD,SAAS,CAACnC,KAAV,CAAkB,8BAAlB,CACAkC,OAAO,CAAG,KAAV,CACD,CAEDrB,QAAQ,CAACsB,SAAD,CAAR,CACA,MAAOD,CAAAA,OAAP,CACD,CA7NoC,QA+NtBI,CAAAA,QA/NsB,kIA+NrC,yJAEI;AACAhC,gBAAgB,CAAC,CAAEH,QAAQ,CAAE,IAAZ,CAAkBC,KAAK,CAAE,aAAzB,CAAD,CAAhB,CAEA;AALJ,IAMQe,MAAM,CAAC9B,EANf,iDAMyB3B,CAAAA,KAAK,CAAC6E,GAAN,oDAAsDpB,MAAM,CAAC9B,EAA7D,EAAmEY,OAAnE,CANzB,6DAQevC,CAAAA,KAAK,CAAC8E,IAAN,CAAW,0CAAX,CAAuDvC,OAAvD,CARf,QAUI;AACAU,WAAW,CAAC,CAAEJ,IAAI,CAAE,IAAR,CAAcC,QAAQ,CAAE,SAAxB,CAAmCC,OAAO,CAAE,2BAA5C,CAAD,CAAX,CAXJ,qFAeI;AACAE,WAAW,CAAC,CAAEJ,IAAI,CAAE,IAAR,CAAcC,QAAQ,CAAE,OAAxB,CAAiCC,OAAO,CAAE,SAAW,aAAMA,OAA3D,CAAD,CAAX,CAhBJ,QAkBE;AACAH,gBAAgB,CAAC,CAAEH,QAAQ,CAAE,KAAZ,CAAmBC,KAAK,CAAE,QAA1B,CAAD,CAAhB,CAnBF,uEA/NqC,2CAqPrC,QAASqC,CAAAA,YAAT,CAAsBd,KAAtB,CAA6B,CAE3BA,KAAK,CAACe,cAAN,GAA0B;AAE1B;AACA,GAAIT,QAAQ,CAAChC,OAAD,CAAZ,CAAuBqC,QAAQ,GAEhC,CAED,QAASK,CAAAA,aAAT,EAAyB,CACvBhC,WAAW,gCAAMD,QAAN,MAAgBH,IAAI,CAAE,KAAtB,GAAX,CAEA;AACA,GAAIG,QAAQ,CAACF,QAAT,GAAsB,SAA1B,CAAqCU,OAAO,CAAC0B,IAAR,CAAa,OAAb,EACtC,CAED,QAASC,CAAAA,iBAAT,CAA2BC,MAA3B,CAAmC,CACjCrB,aAAa,CAAC,KAAD,CAAb,CAEA;AACA,GAAIqB,MAAJ,CAAY5B,OAAO,CAAC0B,IAAR,CAAa,OAAb,EACb,CAED,QAASG,CAAAA,YAAT,EAAwB,CACtB;AACA,GAAIjC,UAAJ,CAAgBW,aAAa,CAAC,IAAD,CAAb,CAChB;AADA,IAEKP,CAAAA,OAAO,CAAC0B,IAAR,CAAa,OAAb,EACN,CAED,mBACE,wCACE,KAAC,aAAD,EAAe,MAAM,CAAEpB,UAAvB,CAAmC,OAAO,CAAEqB,iBAA5C,iEADF,cAKE,KAAC,QAAD,EAAU,IAAI,CAAEnC,QAAQ,CAACH,IAAzB,CAA+B,gBAAgB,CAAE,IAAjD,CAAuD,OAAO,CAAEoC,aAAhE,uBACE,KAAC,QAAD,EAAU,SAAS,CAAE,CAArB,CAAwB,OAAO,CAAC,QAAhC,CAAyC,OAAO,CAAEA,aAAlD,CAAiE,QAAQ,CAAEjC,QAAQ,CAACF,QAApF,UACGE,QAAQ,CAACD,OADZ,EADF,EALF,cAWE,oBAAKO,KAAL,EAXF,cAYE,cAAM,SAAS,CAAEjC,OAAO,CAACZ,IAAzB,CAA+B,QAAQ,CAAEsE,YAAzC,wBAEE,KAAC,SAAD,EACE,EAAE,CAAC,MADL,CAEE,KAAK,CAAC,MAFR,CAGE,OAAO,CAAC,QAHV,CAIE,KAAK,CAAExC,OAAO,CAACX,IAJjB,CAKE,QAAQ,CAAEoC,iBALZ,CAME,QAAQ,KAAE,sCANZ,CAOE,WAAW,CAAC,2BAPd,CAQE,SAAS,KARX,CASE,KAAK,CAAEd,KAAK,CAACtB,IAAN,GAAe,EATxB,CAUE,UAAU,CAAEsB,KAAK,CAACtB,IAVpB,EAFF,cAeE,KAAC,SAAD,EACE,EAAE,CAAC,KADL,CAEE,IAAI,CAAEJ,OAFR,CAGE,WAAW,CAAED,WAHf,CAIE,KAAK,CAAEgB,OAAO,CAACV,GAJjB,CAKE,QAAQ,CAAE,kBAACoC,KAAD,QAAWD,CAAAA,iBAAiB,CAACC,KAAD,CAAQ,KAAR,CAA5B,EALZ,UAOG,uCAAM,KAAC,SAAD,EACL,KAAK,CAAC,KADD,CAEL,OAAO,CAAC,QAFH,CAGL,QAAQ,KAAE,sCAHL,CAIL,WAAW,CAAC,0BAJP,CAKL,SAAS,KALJ,CAML,KAAK,CAAEf,KAAK,CAACrB,GAAN,GAAc,EANhB,CAOL,UAAU,CAAEqB,KAAK,CAACrB,GAPb,EAAN,EAPH,EAfF,cAiCE,KAAC,SAAD,EACE,EAAE,CAAC,IADL,CAEE,IAAI,CAAEJ,MAFR,CAGE,WAAW,CAAEF,WAHf,CAIE,KAAK,CAAEgB,OAAO,CAACT,EAJjB,CAKE,QAAQ,CAAE,kBAACmC,KAAD,QAAWD,CAAAA,iBAAiB,CAACC,KAAD,CAAQ,IAAR,CAA5B,EALZ,UAOG,uCAAM,KAAC,SAAD,EACL,KAAK,CAAC,IADD,CAEL,OAAO,CAAC,QAFH,CAGL,QAAQ,KAAE,sCAHL,CAIL,WAAW,CAAC,yBAJP,CAKL,SAAS,KALJ,CAML,KAAK,CAAEf,KAAK,CAACpB,EAAN,GAAa,EANf,CAOL,UAAU,CAAEoB,KAAK,CAACpB,EAPb,EAAN,EAPH,EAjCF,cAmDE,KAAC,SAAD,EACE,EAAE,CAAC,YADL,CAEE,KAAK,CAAC,YAFR,CAGE,OAAO,CAAC,QAHV,CAIE,KAAK,CAAES,OAAO,CAACR,UAJjB,CAKE,QAAQ,CAAEiC,iBALZ,CAME,QAAQ,KAAE,sCANZ,CAOE,WAAW,CAAC,iCAPd,CAQE,SAAS,KARX,CASE,KAAK,CAAEd,KAAK,CAACnB,UAAN,GAAqB,EAT9B,CAUE,UAAU,CAAEmB,KAAK,CAACnB,UAVpB,EAnDF,cAgEE,KAAC,SAAD,EACE,EAAE,CAAC,YADL,CAEE,KAAK,CAAC,wBAFR,CAGE,OAAO,CAAC,QAHV,CAIE,KAAK,CAAEQ,OAAO,CAACP,UAJjB,CAKE,QAAQ,CAAEgC,iBALZ,CAME,QAAQ,KAAE,sCANZ,CAOE,WAAW,CAAC,kCAPd,CAQE,SAAS,KARX,CASE,KAAK,CAAEd,KAAK,CAAClB,UAAN,GAAqB,EAT9B,CAUE,UAAU,CAAEkB,KAAK,CAAClB,UAVpB,EAhEF,cA6EE,KAAC,SAAD,EACE,EAAE,CAAC,aADL,CAEE,KAAK,CAAC,aAFR,CAGE,OAAO,CAAC,QAHV,CAIE,KAAK,CAAEO,OAAO,CAACN,WAJjB,CAKE,QAAQ,CAAE+B,iBALZ,CAME,WAAW,CAAC,kCANd,CAOE,SAAS,KAPX,CAQE,KAAK,CAAEd,KAAK,CAACjB,WAAN,GAAsB,EAR/B,CASE,UAAU,CAAEiB,KAAK,CAACjB,WATpB,EA7EF,cAyFE,KAAC,SAAD,EACE,EAAE,CAAC,QADL,CAEE,KAAK,CAAC,QAFR,CAGE,OAAO,CAAC,QAHV,CAIE,KAAK,CAAEM,OAAO,CAACL,MAJjB,CAKE,QAAQ,CAAE8B,iBALZ,CAME,QAAQ,KAAE,sCANZ,CAOE,WAAW,CAAC,kBAPd,CAQE,SAAS,KARX,CASE,KAAK,CAAEd,KAAK,CAAChB,MAAN,GAAiB,EAT1B,CAUE,UAAU,CAAEgB,KAAK,CAAChB,MAVpB,EAzFF,cAsGE,KAAC,SAAD,EACE,EAAE,CAAC,WADL,CAEE,KAAK,CAAC,cAFR,CAGE,OAAO,CAAC,QAHV,CAIE,KAAK,CAAEK,OAAO,CAACJ,SAJjB,CAKE,QAAQ,CAAE6B,iBALZ,CAME,QAAQ,KAAE,sCANZ,CAOE,WAAW,CAAC,wBAPd,CAQE,SAAS,KARX,CASE,KAAK,CAAEd,KAAK,CAACf,SAAN,GAAoB,EAT7B,CAUE,UAAU,CAAEe,KAAK,CAACf,SAVpB,EAtGF,cAmHE,KAAC,SAAD,EACE,EAAE,CAAC,IADL,CAEE,KAAK,CAAC,IAFR,CAGE,OAAO,CAAC,QAHV,CAIE,KAAK,CAAEI,OAAO,CAACH,EAJjB,CAKE,QAAQ,CAAE,kBAAA6B,KAAK,QAAID,CAAAA,iBAAiB,CAACC,KAAD,CAAQ,IAAR,CAArB,EALjB,CAME,QAAQ,KAAE,sCANZ,CAOE,WAAW,CAAC,8BAPd,CAQE,MAAM,KARR,CASE,SAAS,KATX,CAUE,KAAK,CAAEf,KAAK,CAACd,EAAN,GAAa,EAVtB,CAWE,UAAU,CAAEc,KAAK,CAACd,EAXpB,UAaGd,OAAO,CAACgE,GAAR,CAAY,SAAAC,MAAM,qBAAI,KAAC,QAAD,EAAU,KAAK,CAAEA,MAAjB,UAAuCA,MAAvC,EAA8BA,MAA9B,CAAJ,EAAlB,CAbH,EAnHF,cAoIE,KAAC,SAAD,EACE,EAAE,CAAC,UADL,CAEE,IAAI,CAAE7D,OAFR,CAGE,WAAW,CAAEH,WAHf,CAIE,KAAK,CAAEgB,OAAO,CAACF,QAJjB,CAKE,QAAQ,CAAE,kBAAC4B,KAAD,QAAWD,CAAAA,iBAAiB,CAACC,KAAD,CAAQ,UAAR,CAA5B,EALZ,UAOG,uCAAM,KAAC,SAAD,EACL,KAAK,CAAC,UADD,CAEL,OAAO,CAAC,QAFH,CAGL,QAAQ,KAAE,sCAHL,CAIL,WAAW,CAAC,+BAJP,CAKL,SAAS,KALJ,CAML,KAAK,CAAEf,KAAK,CAACb,QAAN,GAAmB,EANrB,CAOL,UAAU,CAAEa,KAAK,CAACb,QAPb,EAAN,EAPH,EApIF,cAsJE,KAAC,SAAD,EACE,EAAE,CAAC,OADL,CAEE,KAAK,CAAC,QAFR,CAGE,OAAO,CAAC,QAHV,CAIE,KAAK,CAAEE,OAAO,CAACD,KAJjB,CAKE,QAAQ,CAAE0B,iBALZ,CAME,QAAQ,KAAE,sCANZ,CAOE,WAAW,CAAC,6BAPd,CAQE,SAAS,KARX,CASE,KAAK,CAAEd,KAAK,CAACZ,KAAN,GAAgB,EATzB,CAUE,UAAU,CAAEY,KAAK,CAACZ,KAVpB,EAtJF,cAmKE,MAAC,OAAD,EAAS,SAAS,CAAEjB,OAAO,CAACL,OAA5B,wBACE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,WAA9B,CAA0C,KAAK,CAAC,WAAhD,CAA4D,QAAQ,CAAE2B,aAAa,CAACF,QAApF,UACGE,aAAa,CAACD,KADjB,EADF,cAIE,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,OAAO,CAAE2C,YAArC,oBAJF,GAnKF,GAZF,GADF,CAmMD","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport InputMask from 'react-input-mask'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button'\r\nimport axios from 'axios'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\nimport ConfirmDialog from '../ui/ConfirmDialog'\r\nimport React from 'react'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  form: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    flexWrap: 'wrap',\r\n    maxWidth: '80%',\r\n    margin: '0 auto',\r\n    '& .MuiFormControl-root': {\r\n      minWidth: '200px',\r\n      maxWidth: '500px',\r\n      margin: '0 24px 24px 0'\r\n    }\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    justifyContent: 'space-around',\r\n    marginTop: '36px'\r\n  },\r\n  importado: {\r\n    '& .MuiFormControlLabel-root': {\r\n      display: 'block'\r\n    }\r\n  }\r\n\r\n}))\r\n\r\nexport default function ClientesForm() {\r\n  const classes = useStyles()\r\n\r\n  const estados = [\r\n    'AC',\r\n    'AL',\r\n    'AP',\r\n    'AM',\r\n    'BA',\r\n    'CE',\r\n    'DF',\r\n    'ES',\r\n    'GO',\r\n    'MA',\r\n    'MT',\r\n    'MS',\r\n    'MG',\r\n    'PA',\r\n    'PB',\r\n    'PR',\r\n    'PE',\r\n    'PI',\r\n    'RJ',\r\n    'RN',\r\n    'RS',\r\n    'RO',\r\n    'RR',\r\n    'SC',\r\n    'SP',\r\n    'SE',\r\n    'TO',\r\n  ]\r\n\r\n\r\n  // Classes de caracters para a máscara da placa\r\n  // somente dígitos ~> [0-9]\r\n  const formatChars = {\r\n    '0': '[0-9]',\r\n  }\r\n\r\n  // Máscara para CPF\r\n  const cpfMask = '000.000.000-00'\r\n  // Máscara para RG\r\n  const rgMask = '00.000.000'\r\n  // Máscara para o telefone\r\n  const telMask = '(00)0000-0000'\r\n\r\n\r\n\r\n\r\n\r\n  const [cliente, setCliente] = useState({\r\n    id: null,\r\n    nome: '',\r\n    cpf: '',\r\n    rg: '',\r\n    logradouro: '',\r\n    num_imovel: '',\r\n    complemento: '',\r\n    bairro: '',\r\n    municipio: '',\r\n    uf: '',\r\n    telefone: '',\r\n    email: '',\r\n  })\r\n\r\n\r\n\r\n  const [sendBtnStatus, setSendBtnStatus] = useState({\r\n    disabled: false,\r\n    label: 'Enviar'\r\n  })\r\n\r\n  const [sbStatus, setSbStatus] = useState({\r\n    open: false,\r\n    severity: 'success',\r\n    message: ''\r\n  })\r\n\r\n  const [error, setError] = useState({\r\n    nome: '',\r\n    cpf: '',\r\n    rg: '',\r\n    logradouro: '',\r\n    num_imovel: '',\r\n    complemento: '',\r\n    bairro: '',\r\n    municipio: '',\r\n    uf: '',\r\n    telefone: '',\r\n    email: '',\r\n  })\r\n\r\n  const [isModified, setIsModified] = useState(false)\r\n\r\n  const [title, setTitle] = useState('Cadastrar novo cliente')\r\n\r\n  const history = useHistory()\r\n  const params = useParams()\r\n\r\n  // useEffect() para quando o formulário for carregado (só na inicialização)\r\n  useEffect(() => {\r\n    // Verificamos se a rota atual contém o parâmetro id\r\n    // Em caso positivo, buscamos os dados no back-end e carregamos o formulário para edição\r\n    if (params.id) {\r\n      setTitle('Editar cliente')\r\n      getData(params.id)\r\n    }\r\n  }, [])\r\n\r\n  async function getData(id) {\r\n    try {\r\n      let response = await axios.get(`https://api.faustocintra.com.br/clientes/${id}`)\r\n      setCliente(response.data)\r\n    }\r\n    catch (error) {\r\n      setSbStatus({\r\n        open: true,\r\n        severity: 'error',\r\n        message: \"Não foi possível carregar os dados para edição.\"\r\n      })\r\n    }\r\n  }\r\n\r\n  const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\r\n\r\n\r\n  function handleInputChange(event, property) {\r\n\r\n    const clienteTemp = { ...cliente }\r\n\r\n\r\n    if (event.target.id) property = event.target.id\r\n    if (property === 'bairro') {\r\n      clienteTemp.bairro = event.target.value.toUpperCase()\r\n    }\r\n    else {\r\n      // Quando o nome de uma propriedade de objeto aparece entre [],\r\n      // significa que o nome da propriedade será determinado pela\r\n      // variável ou expressão contida dentro dos colchetes\r\n      clienteTemp[property] = event.target.value\r\n    }\r\n\r\n    setCliente(clienteTemp)\r\n    setIsModified(true)   // O formulário foi modificado\r\n    validate(clienteTemp)  // Dispara a validação\r\n  }\r\n\r\n  function validate(data) {\r\n    let isValid = true\r\n\r\n    const errorTemp = {\r\n      nome: '',\r\n      cpf: '',\r\n      rg: '',\r\n      logradouro: '',\r\n      num_imovel: '',\r\n      complemento: '',\r\n      bairro: '',\r\n      municipio: '',\r\n      uf: '',\r\n      telefone: '',\r\n      email: '',\r\n    }\r\n\r\n    // trim(): retira espaços em branco do início e do final de uma string\r\n    if (data.nome.trim() === '') {\r\n      errorTemp.nome = 'O nome deve ser preenchido'\r\n      isValid = false\r\n    }\r\n\r\n    if (data.logradouro.trim() === '') {\r\n      errorTemp.logradouro = 'O logradouro deve ser preenchido'\r\n      isValid = false\r\n    }\r\n\r\n    if (data.num_imovel.trim() === '') {\r\n      errorTemp.num_imovel = 'O número do imóvel deve ser preenchido'\r\n      isValid = false\r\n    }\r\n\r\n    if (data.bairro.trim() === '') {\r\n      errorTemp.bairro = 'O bairro deve ser preenchido'\r\n      isValid = false\r\n    }\r\n\r\n    if (data.municipio.trim() === '') {\r\n      errorTemp.municipio = 'O município deve ser preenchido'\r\n      isValid = false\r\n    }\r\n\r\n    if (data.uf.trim() === '') {\r\n      errorTemp.uf = 'A UF deve ser informada'\r\n      isValid = false\r\n    }\r\n\r\n    // O CPF não pode ser string vazia nem conter sublinhado\r\n    if (data.cpf.trim() === '' || data.cpf.includes('_')) {\r\n      errorTemp.cpf = 'O CPF deve ser preenchido corretamente'\r\n      isValid = false\r\n    }\r\n\r\n    // O RG não pode ser string vazia nem conter sublinhado\r\n    if (data.rg.trim() === '' || data.rg.includes('_')) {\r\n      errorTemp.rg = 'O RG deve ser preenchido corretamente'\r\n      isValid = false\r\n    }\r\n\r\n    // O telefone não pode ser string vazia nem conter sublinhado\r\n    if (data.telefone.trim() === '' || data.telefone.includes('_')) {\r\n      errorTemp.telefone = 'O telefone deve ser preenchido corretamente'\r\n      isValid = false\r\n    }\r\n\r\n    if (data.email.trim() === '') {\r\n      errorTemp.email = 'O e-mail deve ser preenchido'\r\n      isValid = false\r\n    }\r\n\r\n    setError(errorTemp)\r\n    return isValid\r\n  }\r\n\r\n  async function saveData() {\r\n    try {\r\n      // Desabilita o botão de enviar para evitar envios duplicados\r\n      setSendBtnStatus({ disabled: true, label: 'Enviando...' })\r\n\r\n      // Se estivermos editando, precisamos enviar os dados com o verbo HTTP PUT\r\n      if (params.id) await axios.put(`https://api.faustocintra.com.br/clientes/${params.id}`, cliente)\r\n      // Senão, estaremos criando um novo registro, e o verbo HTTP a ser usado será o POST\r\n      else await axios.post('https://api.faustocintra.com.br/clientes', cliente)\r\n\r\n      // Mostra a SnackBar \r\n      setSbStatus({ open: true, severity: 'success', message: 'Dados salvos com sucesso!' })\r\n\r\n    }\r\n    catch (error) {\r\n      // Mostra a SnackBar\r\n      setSbStatus({ open: true, severity: 'error', message: 'ERRO: ' + error.message })\r\n    }\r\n    // Restaura o estado inicial do botão de envio\r\n    setSendBtnStatus({ disabled: false, label: 'Enviar' })\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n\r\n    event.preventDefault()    // Evita que a página seja recarregada\r\n\r\n    // Só envia para o banco de dados se o formulário for válido\r\n    if (validate(cliente)) saveData()\r\n\r\n  }\r\n\r\n  function handleSbClose() {\r\n    setSbStatus({ ...sbStatus, open: false })\r\n\r\n    // Retorna para a página de listagem em caso de sucesso\r\n    if (sbStatus.severity === 'success') history.push('/list')\r\n  }\r\n\r\n  function handleDialogClose(result) {\r\n    setDialogOpen(false)\r\n\r\n    // Se o usuário realmente deseja voltar\r\n    if (result) history.push('/list')\r\n  }\r\n\r\n  function handleGoBack() {\r\n    // se o formulário tiver sido modificado, exibimos o diálogo de confirmação\r\n    if (isModified) setDialogOpen(true)\r\n    // Senão, podemos voltar diretamente para a listagem\r\n    else history.push('/list')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\r\n        Há dados não salvos. Deseja realmente voltar?\r\n      </ConfirmDialog>\r\n\r\n      <Snackbar open={sbStatus.open} autoHideDuration={6000} onClose={handleSbClose}>\r\n        <MuiAlert elevation={6} variant=\"filled\" onClose={handleSbClose} severity={sbStatus.severity}>\r\n          {sbStatus.message}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n\r\n      <h1>{title}</h1>\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n\r\n        <TextField\r\n          id=\"nome\"\r\n          label=\"Nome\"\r\n          variant=\"filled\"\r\n          value={cliente.nome}\r\n          onChange={handleInputChange}\r\n          required  /* not null, precisa ser preenchido */\r\n          placeholder=\"Informe o nome do cliente\"\r\n          fullWidth\r\n          error={error.nome !== ''}\r\n          helperText={error.nome}\r\n        />\r\n\r\n        <InputMask\r\n          id=\"cpf\"\r\n          mask={cpfMask}\r\n          formatChars={formatChars}\r\n          value={cliente.cpf}\r\n          onChange={(event) => handleInputChange(event, 'cpf')}\r\n        >\r\n          {() => <TextField\r\n            label=\"CPF\"\r\n            variant=\"filled\"\r\n            required  /* not null, precisa ser preenchido */\r\n            placeholder=\"Informe o CPF do cliente\"\r\n            fullWidth\r\n            error={error.cpf !== ''}\r\n            helperText={error.cpf}\r\n          />}\r\n        </InputMask>\r\n\r\n        <InputMask\r\n          id=\"rg\"\r\n          mask={rgMask}\r\n          formatChars={formatChars}\r\n          value={cliente.rg}\r\n          onChange={(event) => handleInputChange(event, 'rg')}\r\n        >\r\n          {() => <TextField\r\n            label=\"RG\"\r\n            variant=\"filled\"\r\n            required  /* not null, precisa ser preenchido */\r\n            placeholder=\"Informe o RG do cliente\"\r\n            fullWidth\r\n            error={error.rg !== ''}\r\n            helperText={error.rg}\r\n          />}\r\n        </InputMask>\r\n\r\n        <TextField\r\n          id=\"logradouro\"\r\n          label=\"Logradouro\"\r\n          variant=\"filled\"\r\n          value={cliente.logradouro}\r\n          onChange={handleInputChange}\r\n          required  /* not null, precisa ser preenchido */\r\n          placeholder=\"Informe o logradouro do cliente\"\r\n          fullWidth\r\n          error={error.logradouro !== ''}\r\n          helperText={error.logradouro}\r\n        />\r\n\r\n        <TextField\r\n          id=\"num_imovel\"\r\n          label=\"Número do imóvel\"\r\n          variant=\"filled\"\r\n          value={cliente.num_imovel}\r\n          onChange={handleInputChange}\r\n          required  /* not null, precisa ser preenchido */\r\n          placeholder=\"Informe o número do imóvel\"\r\n          fullWidth\r\n          error={error.num_imovel !== ''}\r\n          helperText={error.num_imovel}\r\n        />\r\n\r\n        <TextField\r\n          id=\"complemento\"\r\n          label=\"Complemento\"\r\n          variant=\"filled\"\r\n          value={cliente.complemento}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Informe o Complemento, se houver\"\r\n          fullWidth\r\n          error={error.complemento !== ''}\r\n          helperText={error.complemento}\r\n        />\r\n\r\n        <TextField\r\n          id=\"bairro\"\r\n          label=\"Bairro\"\r\n          variant=\"filled\"\r\n          value={cliente.bairro}\r\n          onChange={handleInputChange}\r\n          required  /* not null, precisa ser preenchido */\r\n          placeholder=\"Informe o bairro\"\r\n          fullWidth\r\n          error={error.bairro !== ''}\r\n          helperText={error.bairro}\r\n        />\r\n\r\n        <TextField\r\n          id=\"municipio\"\r\n          label=\"Município\"\r\n          variant=\"filled\"\r\n          value={cliente.municipio}\r\n          onChange={handleInputChange}\r\n          required  /* not null, precisa ser preenchido */\r\n          placeholder=\"Informe o município\"\r\n          fullWidth\r\n          error={error.municipio !== ''}\r\n          helperText={error.municipio}\r\n        />\r\n\r\n        <TextField\r\n          id=\"uf\"\r\n          label=\"UF\"\r\n          variant=\"filled\"\r\n          value={cliente.uf}\r\n          onChange={event => handleInputChange(event, 'uf')}\r\n          required  /* not null, precisa ser preenchido */\r\n          placeholder=\"Informe a UF do município\"\r\n          select\r\n          fullWidth\r\n          error={error.uf !== ''}\r\n          helperText={error.uf}\r\n        >\r\n          {estados.map(estado => <MenuItem value={estado} key={estado}>{estado}</MenuItem>)}\r\n        </TextField>\r\n\r\n\r\n        <InputMask\r\n          id=\"telefone\"\r\n          mask={telMask}\r\n          formatChars={formatChars}\r\n          value={cliente.telefone}\r\n          onChange={(event) => handleInputChange(event, 'telefone')}\r\n        >\r\n          {() => <TextField\r\n            label=\"telefone\"\r\n            variant=\"filled\"\r\n            required  /* not null, precisa ser preenchido */\r\n            placeholder=\"Informe o telefone do cliente\"\r\n            fullWidth\r\n            error={error.telefone !== ''}\r\n            helperText={error.telefone}\r\n          />}\r\n        </InputMask>\r\n\r\n        <TextField\r\n          id=\"email\"\r\n          label=\"E-mail\"\r\n          variant=\"filled\"\r\n          value={cliente.email}\r\n          onChange={handleInputChange}\r\n          required  /* not null, precisa ser preenchido */\r\n          placeholder=\"Informe o e-mail do cliente\"\r\n          fullWidth\r\n          error={error.email !== ''}\r\n          helperText={error.email}\r\n        />\r\n\r\n        <Toolbar className={classes.toolbar}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\" disabled={sendBtnStatus.disabled}>\r\n            {sendBtnStatus.label}\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleGoBack}>Voltar</Button>\r\n        </Toolbar>\r\n\r\n        {/*    \r\n        <div>\r\n          {JSON.stringify(cliente)}\r\n          <br />\r\n          currentId: {JSON.stringify(currentId)}\r\n          <br />\r\n          isModified: {JSON.stringify(isModified)}\r\n        </div>\r\n      */}\r\n      </form>\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}