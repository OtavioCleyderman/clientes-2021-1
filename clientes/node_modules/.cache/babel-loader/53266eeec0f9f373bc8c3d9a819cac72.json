{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Otavio\\\\Documents\\\\GitHub\\\\clientes-2021-1\\\\clientes\\\\src\\\\routed\\\\ClientesForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputMask from 'react-input-mask';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    maxWidth: '80%',\n    margin: '0 auto',\n    '& .MuiFormControl-root': {\n      minWidth: '200px',\n      maxWidth: '500px',\n      margin: '0 24px 24px 0'\n    }\n  },\n  toolbar: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-around',\n    marginTop: '36px'\n  },\n  importado: {\n    '& .MuiFormControlLabel-root': {\n      display: 'block'\n    }\n  }\n}));\nexport default function ClientesForm() {\n  _s();\n\n  const classes = useStyles();\n  const uf = ['AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA', 'MT', 'MS', 'MG', 'PA', 'PB', 'PR', 'PE', 'PI', 'RJ', 'RN', 'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO']; // Classes de caracters para a máscara da placa\n  // somente dígitos ~> [0-9]\n\n  const formatChars = {\n    '0': '[0-9]'\n  }; // Máscara para CPF\n\n  const cpfMask = '000.000.000-00'; // Máscara para RG\n\n  const rgMask = '00.000.000'; // Máscara para o telefone\n\n  const telMask = '(00)0000-0000';\n  const [cliente, setCliente] = useState({\n    id: null,\n    nome: '',\n    cpf: '',\n    rg: '',\n    logradouro: '',\n    num_imovel: '',\n    complemento: '',\n    bairro: '',\n    municipio: '',\n    uf: '',\n    telefone: '',\n    email: ''\n  });\n  const [sendBtnStatus, setSendBtnStatus] = useState({\n    disabled: false,\n    label: 'Enviar'\n  });\n  const [sbStatus, setSbStatus] = useState({\n    open: false,\n    severity: 'success',\n    message: ''\n  });\n  const [error, setError] = useState({\n    nome: '',\n    cpf: '',\n    rg: '',\n    logradouro: '',\n    num_imovel: '',\n    complemento: '',\n    bairro: '',\n    municipio: '',\n    uf: '',\n    telefone: '',\n    email: ''\n  });\n  const [isModified, setIsModified] = useState(false);\n  const [title, setTitle] = useState('Cadastrar novo cliente');\n  const history = useHistory();\n  const params = useParams(); // useEffect() para quando o formulário for carregado (só na inicialização)\n\n  useEffect(() => {\n    // Verificamos se a rota atual contém o parâmetro id\n    // Em caso positivo, buscamos os dados no back-end e carregamos o formulário para edição\n    if (params.id) {\n      setTitle('Editar cliente');\n      getData(params.id);\n    }\n  }, []);\n\n  async function getData(id) {\n    try {\n      let response = await axios.get(`https://api.faustocintra.com.br/clientes/${id}`);\n      setcliente(response.data);\n    } catch (error) {\n      setSbStatus({\n        open: true,\n        severity: 'error',\n        message: \"Não foi possível carregar os dados para edição.\"\n      });\n    }\n  }\n\n  const [dialogOpen, setDialogOpen] = useState(false); // O diálogo de confirmação está aberto?\n\n  function handleInputChange(event, property) {\n    const clienteTemp = { ...cliente\n    };\n    if (event.target.id) property = event.target.id;\n    setCliente(clienteTemp);\n    setIsModified(true); // O formulário foi modificado\n\n    validate(clienteTemp); // Dispara a validação\n  }\n\n  function validate(data) {\n    let isValid = true;\n    const errorTemp = {\n      nome: '',\n      cpf: '',\n      rg: '',\n      logradouro: '',\n      num_imovel: '',\n      complemento: '',\n      bairro: '',\n      municipio: '',\n      uf: '',\n      telefone: '',\n      email: ''\n    }; // trim(): retira espaços em branco do início e do final de uma string\n\n    if (data.marca.trim() === '') {\n      errorTemp.marca = 'A marca deve ser preenchida';\n      isValid = false;\n    }\n\n    if (data.modelo.trim() === '') {\n      errorTemp.modelo = 'O modelo deve ser preenchido';\n      isValid = false;\n    }\n\n    if (data.cor.trim() === '') {\n      errorTemp.cor = 'A cor deve ser informada';\n      isValid = false;\n    } // A placa não pode ser string vazia nem conter sublinhado\n\n\n    if (data.placa.trim() === '' || data.placa.includes('_')) {\n      errorTemp.placa = 'A placa deve ser preenchida corretamente';\n      isValid = false;\n    } // O preço deve ser numérico e maior que zero\n\n\n    if (isNaN(data.preco) || Number(data.preco) <= 0) {\n      errorTemp.preco = 'O preço deve ser informado e maior que zero';\n      isValid = false;\n    }\n\n    setError(errorTemp);\n    return isValid;\n  }\n\n  async function saveData() {\n    try {\n      // Desabilita o botão de enviar para evitar envios duplicados\n      setSendBtnStatus({\n        disabled: true,\n        label: 'Enviando...'\n      }); // Se estivermos editando, precisamos enviar os dados com o verbo HTTP PUT\n\n      if (params.id) await axios.put(`https://api.faustocintra.com.br/clientes/${params.id}`, cliente); // Senão, estaremos criando um novo registro, e o verbo HTTP a ser usado será o POST\n      else await axios.post('https://api.faustocintra.com.br/clientes', cliente); // Mostra a SnackBar\n\n      setSbStatus({\n        open: true,\n        severity: 'success',\n        message: 'Dados salvos com sucesso!'\n      });\n    } catch (error) {\n      // Mostra a SnackBar\n      setSbStatus({\n        open: true,\n        severity: 'error',\n        message: 'ERRO: ' + error.message\n      });\n    } // Restaura o estado inicial do botão de envio\n\n\n    setSendBtnStatus({\n      disabled: false,\n      label: 'Enviar'\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault(); // Evita que a página seja recarregada\n    // Só envia para o banco de dados se o formulário for válido\n\n    if (validate(cliente)) saveData();\n  }\n\n  function handleSbClose() {\n    setSbStatus({ ...sbStatus,\n      open: false\n    }); // Retorna para a página de listagem em caso de sucesso\n\n    if (sbStatus.severity === 'success') history.push('/list');\n  }\n\n  function handleDialogClose(result) {\n    setDialogOpen(false); // Se o usuário realmente deseja voltar\n\n    if (result) history.push('/list');\n  }\n\n  function handleGoBack() {\n    // se o formulário tiver sido modificado, exibimos o diálogo de confirmação\n    if (isModified) setDialogOpen(true); // Senão, podemos voltar diretamente para a listagem\n    else history.push('/list');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      isOpen: dialogOpen,\n      onClose: handleDialogClose,\n      children: \"H\\xE1 dados n\\xE3o salvos. Deseja realmente voltar?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: sbStatus.open,\n      autoHideDuration: 6000,\n      onClose: handleSbClose,\n      children: /*#__PURE__*/_jsxDEV(MuiAlert, {\n        elevation: 6,\n        variant: \"filled\",\n        onClose: handleSbClose,\n        severity: sbStatus.severity,\n        children: sbStatus.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"marca\",\n        label: \"Marca\",\n        variant: \"filled\",\n        value: cliente.marca,\n        onChange: handleInputChange,\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe a marca do ve\\xEDculo\",\n        fullWidth: true,\n        error: error.marca !== '',\n        helperText: error.marca\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"modelo\",\n        label: \"Modelo\",\n        variant: \"filled\",\n        value: cliente.modelo,\n        onChange: handleInputChange,\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe o modelo do ve\\xEDculo\",\n        fullWidth: true,\n        error: error.modelo !== '',\n        helperText: error.modelo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"cor\",\n        label: \"Cor\",\n        variant: \"filled\",\n        value: cliente.cor,\n        onChange: event => handleInputChange(event, 'cor'),\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe a cor do ve\\xEDculo\",\n        select: true,\n        fullWidth: true,\n        error: error.cor !== '',\n        helperText: error.cor,\n        children: colors.map(color => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: color,\n          children: color\n        }, color, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 32\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"ano_fabricacao\",\n        label: \"Ano de fabrica\\xE7\\xE3o\",\n        variant: \"filled\",\n        value: cliente.ano_fabricacao,\n        onChange: event => handleInputChange(event, 'ano_fabricacao'),\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe o ano de fabrica\\xE7\\xE3o do ve\\xEDculo\",\n        select: true,\n        fullWidth: true,\n        children: years.map(year => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: year,\n          children: year\n        }, year, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 30\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n        id: \"placa\",\n        mask: placaMask,\n        formatChars: formatChars,\n        value: cliente.placa,\n        onChange: event => handleInputChange(event, 'placa'),\n        children: () => /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Placa\",\n          variant: \"filled\",\n          required: true\n          /* not null, precisa ser preenchido */\n          ,\n          placeholder: \"Informe a placa do ve\\xEDculo\",\n          fullWidth: true,\n          error: error.placa !== '',\n          helperText: error.placa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"preco\",\n        label: \"Pre\\xE7o\",\n        variant: \"filled\",\n        value: cliente.preco,\n        onChange: handleInputChange,\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe o valor do ve\\xEDculo\",\n        fullWidth: true,\n        type: \"number\",\n        onFocus: event => event.target.select() // Seleciona o conteúdo ao focar\n        ,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: \"R$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 29\n          }, this)\n        },\n        error: error.preco !== '',\n        helperText: error.preco\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.importado,\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            id: \"importado\",\n            checked: importadoChecked,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this),\n          label: \"Importado?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"secondary\",\n          disabled: sendBtnStatus.disabled,\n          children: sendBtnStatus.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleGoBack,\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ClientesForm, \"j/BG3FPe8orwKEkL6sdeH6x5ozM=\", false, function () {\n  return [useStyles, useHistory, useParams];\n});\n\n_c = ClientesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientesForm\");","map":{"version":3,"sources":["C:/Users/Otavio/Documents/GitHub/clientes-2021-1/clientes/src/routed/ClientesForm.js"],"names":["useState","useEffect","TextField","MenuItem","FormControl","FormControlLabel","Checkbox","InputMask","makeStyles","InputAdornment","Toolbar","Button","axios","useHistory","useParams","Snackbar","MuiAlert","ConfirmDialog","React","useStyles","theme","form","display","justifyContent","flexWrap","maxWidth","margin","minWidth","toolbar","width","marginTop","importado","ClientesForm","classes","uf","formatChars","cpfMask","rgMask","telMask","cliente","setCliente","id","nome","cpf","rg","logradouro","num_imovel","complemento","bairro","municipio","telefone","email","sendBtnStatus","setSendBtnStatus","disabled","label","sbStatus","setSbStatus","open","severity","message","error","setError","isModified","setIsModified","title","setTitle","history","params","getData","response","get","setcliente","data","dialogOpen","setDialogOpen","handleInputChange","event","property","clienteTemp","target","validate","isValid","errorTemp","marca","trim","modelo","cor","placa","includes","isNaN","preco","Number","saveData","put","post","handleSubmit","preventDefault","handleSbClose","push","handleDialogClose","result","handleGoBack","colors","map","color","ano_fabricacao","years","year","placaMask","select","startAdornment","importadoChecked"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport InputMask from 'react-input-mask'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button'\r\nimport axios from 'axios'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\nimport ConfirmDialog from '../ui/ConfirmDialog'\r\nimport React from 'react'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  form: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    flexWrap: 'wrap',\r\n    maxWidth: '80%',\r\n    margin: '0 auto',\r\n    '& .MuiFormControl-root': {\r\n      minWidth: '200px',\r\n      maxWidth: '500px',\r\n      margin: '0 24px 24px 0'\r\n    }\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    justifyContent: 'space-around',\r\n    marginTop: '36px'\r\n  },\r\n  importado: {\r\n    '& .MuiFormControlLabel-root': {\r\n      display: 'block'\r\n    }\r\n  }\r\n\r\n}))\r\n\r\nexport default function ClientesForm() {\r\n  const classes = useStyles()\r\n\r\n  const uf = [\r\n    'AC',\r\n    'AL',\r\n    'AP',\r\n    'AM',\r\n    'BA',\r\n    'CE',\r\n    'DF',\r\n    'ES',\r\n    'GO',\r\n    'MA',\r\n    'MT',\r\n    'MS',\r\n    'MG',\r\n    'PA',\r\n    'PB',\r\n    'PR',\r\n    'PE',\r\n    'PI',\r\n    'RJ',\r\n    'RN',\r\n    'RS',\r\n    'RO',\r\n    'RR',\r\n    'SC',\r\n    'SP',\r\n    'SE',\r\n    'TO',\r\n  ]\r\n\r\n\r\n  // Classes de caracters para a máscara da placa\r\n  // somente dígitos ~> [0-9]\r\n  const formatChars = {\r\n    '0': '[0-9]',\r\n  }\r\n\r\n  // Máscara para CPF\r\n  const cpfMask = '000.000.000-00'\r\n  // Máscara para RG\r\n  const rgMask = '00.000.000'\r\n  // Máscara para o telefone\r\n  const telMask = '(00)0000-0000'\r\n\r\n\r\n\r\n\r\n\r\n  const [cliente, setCliente] = useState({\r\n    id: null,\r\n    nome: '',\r\n    cpf: '',\r\n    rg: '',\r\n    logradouro: '',\r\n    num_imovel: '',\r\n    complemento: '',\r\n    bairro: '',\r\n    municipio: '',\r\n    uf: '',\r\n    telefone: '',\r\n    email: '',\r\n  })\r\n\r\n\r\n\r\n  const [sendBtnStatus, setSendBtnStatus] = useState({\r\n    disabled: false,\r\n    label: 'Enviar'\r\n  })\r\n\r\n  const [sbStatus, setSbStatus] = useState({\r\n    open: false,\r\n    severity: 'success',\r\n    message: ''\r\n  })\r\n\r\n  const [error, setError] = useState({\r\n    nome: '',\r\n    cpf: '',\r\n    rg: '',\r\n    logradouro: '',\r\n    num_imovel: '',\r\n    complemento: '',\r\n    bairro: '',\r\n    municipio: '',\r\n    uf: '',\r\n    telefone: '',\r\n    email: '',\r\n  })\r\n\r\n  const [isModified, setIsModified] = useState(false)\r\n\r\n  const [title, setTitle] = useState('Cadastrar novo cliente')\r\n\r\n  const history = useHistory()\r\n  const params = useParams()\r\n\r\n  // useEffect() para quando o formulário for carregado (só na inicialização)\r\n  useEffect(() => {\r\n    // Verificamos se a rota atual contém o parâmetro id\r\n    // Em caso positivo, buscamos os dados no back-end e carregamos o formulário para edição\r\n    if (params.id) {\r\n      setTitle('Editar cliente')\r\n      getData(params.id)\r\n    }\r\n  }, [])\r\n\r\n  async function getData(id) {\r\n    try {\r\n      let response = await axios.get(`https://api.faustocintra.com.br/clientes/${id}`)\r\n      setcliente(response.data)\r\n    }\r\n    catch (error) {\r\n      setSbStatus({\r\n        open: true,\r\n        severity: 'error',\r\n        message: \"Não foi possível carregar os dados para edição.\"\r\n      })\r\n    }\r\n  }\r\n\r\n  const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\r\n\r\n\r\n  function handleInputChange(event, property) {\r\n\r\n    const clienteTemp = { ...cliente }\r\n\r\n\r\n    if (event.target.id) property = event.target.id\r\n\r\n    setCliente(clienteTemp)\r\n    setIsModified(true)   // O formulário foi modificado\r\n    validate(clienteTemp)  // Dispara a validação\r\n  }\r\n\r\n  function validate(data) {\r\n    let isValid = true\r\n\r\n    const errorTemp = {\r\n      nome: '',\r\n      cpf: '',\r\n      rg: '',\r\n      logradouro: '',\r\n      num_imovel: '',\r\n      complemento: '',\r\n      bairro: '',\r\n      municipio: '',\r\n      uf: '',\r\n      telefone: '',\r\n      email: '',\r\n    }\r\n\r\n    // trim(): retira espaços em branco do início e do final de uma string\r\n    if (data.marca.trim() === '') {\r\n      errorTemp.marca = 'A marca deve ser preenchida'\r\n      isValid = false\r\n    }\r\n\r\n    if (data.modelo.trim() === '') {\r\n      errorTemp.modelo = 'O modelo deve ser preenchido'\r\n      isValid = false\r\n    }\r\n\r\n    if (data.cor.trim() === '') {\r\n      errorTemp.cor = 'A cor deve ser informada'\r\n      isValid = false\r\n    }\r\n\r\n    // A placa não pode ser string vazia nem conter sublinhado\r\n    if (data.placa.trim() === '' || data.placa.includes('_')) {\r\n      errorTemp.placa = 'A placa deve ser preenchida corretamente'\r\n      isValid = false\r\n    }\r\n\r\n    // O preço deve ser numérico e maior que zero\r\n    if (isNaN(data.preco) || Number(data.preco) <= 0) {\r\n      errorTemp.preco = 'O preço deve ser informado e maior que zero'\r\n      isValid = false\r\n    }\r\n\r\n    setError(errorTemp)\r\n    return isValid\r\n  }\r\n\r\n  async function saveData() {\r\n    try {\r\n      // Desabilita o botão de enviar para evitar envios duplicados\r\n      setSendBtnStatus({ disabled: true, label: 'Enviando...' })\r\n\r\n      // Se estivermos editando, precisamos enviar os dados com o verbo HTTP PUT\r\n      if (params.id) await axios.put(`https://api.faustocintra.com.br/clientes/${params.id}`, cliente)\r\n      // Senão, estaremos criando um novo registro, e o verbo HTTP a ser usado será o POST\r\n      else await axios.post('https://api.faustocintra.com.br/clientes', cliente)\r\n\r\n      // Mostra a SnackBar\r\n      setSbStatus({ open: true, severity: 'success', message: 'Dados salvos com sucesso!' })\r\n\r\n    }\r\n    catch (error) {\r\n      // Mostra a SnackBar\r\n      setSbStatus({ open: true, severity: 'error', message: 'ERRO: ' + error.message })\r\n    }\r\n    // Restaura o estado inicial do botão de envio\r\n    setSendBtnStatus({ disabled: false, label: 'Enviar' })\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n\r\n    event.preventDefault()    // Evita que a página seja recarregada\r\n\r\n    // Só envia para o banco de dados se o formulário for válido\r\n    if (validate(cliente)) saveData()\r\n\r\n  }\r\n\r\n  function handleSbClose() {\r\n    setSbStatus({ ...sbStatus, open: false })\r\n\r\n    // Retorna para a página de listagem em caso de sucesso\r\n    if (sbStatus.severity === 'success') history.push('/list')\r\n  }\r\n\r\n  function handleDialogClose(result) {\r\n    setDialogOpen(false)\r\n\r\n    // Se o usuário realmente deseja voltar\r\n    if (result) history.push('/list')\r\n  }\r\n\r\n  function handleGoBack() {\r\n    // se o formulário tiver sido modificado, exibimos o diálogo de confirmação\r\n    if (isModified) setDialogOpen(true)\r\n    // Senão, podemos voltar diretamente para a listagem\r\n    else history.push('/list')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\r\n        Há dados não salvos. Deseja realmente voltar?\r\n      </ConfirmDialog>\r\n\r\n      <Snackbar open={sbStatus.open} autoHideDuration={6000} onClose={handleSbClose}>\r\n        <MuiAlert elevation={6} variant=\"filled\" onClose={handleSbClose} severity={sbStatus.severity}>\r\n          {sbStatus.message}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n\r\n      <h1>{title}</h1>\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n\r\n        <TextField\r\n          id=\"marca\"\r\n          label=\"Marca\"\r\n          variant=\"filled\"\r\n          value={cliente.marca}\r\n          onChange={handleInputChange}\r\n          required  /* not null, precisa ser preenchido */\r\n          placeholder=\"Informe a marca do veículo\"\r\n          fullWidth\r\n          error={error.marca !== ''}\r\n          helperText={error.marca}\r\n        />\r\n\r\n        <TextField\r\n          id=\"modelo\"\r\n          label=\"Modelo\"\r\n          variant=\"filled\"\r\n          value={cliente.modelo}\r\n          onChange={handleInputChange}\r\n          required  /* not null, precisa ser preenchido */\r\n          placeholder=\"Informe o modelo do veículo\"\r\n          fullWidth\r\n          error={error.modelo !== ''}\r\n          helperText={error.modelo}\r\n        />\r\n\r\n        <TextField\r\n          id=\"cor\"\r\n          label=\"Cor\"\r\n          variant=\"filled\"\r\n          value={cliente.cor}\r\n          onChange={event => handleInputChange(event, 'cor')}\r\n          required  /* not null, precisa ser preenchido */\r\n          placeholder=\"Informe a cor do veículo\"\r\n          select\r\n          fullWidth\r\n          error={error.cor !== ''}\r\n          helperText={error.cor}\r\n        >\r\n          {colors.map(color => <MenuItem value={color} key={color}>{color}</MenuItem>)}\r\n        </TextField>\r\n\r\n        <TextField\r\n          id=\"ano_fabricacao\"\r\n          label=\"Ano de fabricação\"\r\n          variant=\"filled\"\r\n          value={cliente.ano_fabricacao}\r\n          onChange={event => handleInputChange(event, 'ano_fabricacao')}\r\n          required  /* not null, precisa ser preenchido */\r\n          placeholder=\"Informe o ano de fabricação do veículo\"\r\n          select\r\n          fullWidth\r\n        >\r\n          {years.map(year => <MenuItem value={year} key={year}>{year}</MenuItem>)}\r\n        </TextField>\r\n\r\n\r\n        <InputMask\r\n          id=\"placa\"\r\n          mask={placaMask}\r\n          formatChars={formatChars}\r\n          value={cliente.placa}\r\n          onChange={(event) => handleInputChange(event, 'placa')}\r\n        >\r\n          {() => <TextField\r\n            label=\"Placa\"\r\n            variant=\"filled\"\r\n            required  /* not null, precisa ser preenchido */\r\n            placeholder=\"Informe a placa do veículo\"\r\n            fullWidth\r\n            error={error.placa !== ''}\r\n            helperText={error.placa}\r\n          />}\r\n        </InputMask>\r\n\r\n        <TextField\r\n          id=\"preco\"\r\n          label=\"Preço\"\r\n          variant=\"filled\"\r\n          value={cliente.preco}\r\n          onChange={handleInputChange}\r\n          required  /* not null, precisa ser preenchido */\r\n          placeholder=\"Informe o valor do veículo\"\r\n          fullWidth\r\n          type=\"number\"\r\n          onFocus={event => event.target.select()}  // Seleciona o conteúdo ao focar\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\r\n          }}\r\n          error={error.preco !== ''}\r\n          helperText={error.preco}\r\n        />\r\n\r\n        <FormControl className={classes.importado} fullWidth>\r\n          <FormControlLabel control={\r\n            <Checkbox\r\n              id=\"importado\"\r\n              checked={importadoChecked}\r\n              onChange={handleInputChange}\r\n            />\r\n          }\r\n            label=\"Importado?\"\r\n          />\r\n        </FormControl>\r\n\r\n        <Toolbar className={classes.toolbar}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\" disabled={sendBtnStatus.disabled}>\r\n            {sendBtnStatus.label}\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleGoBack}>Voltar</Button>\r\n        </Toolbar>\r\n\r\n        {/*    \r\n        <div>\r\n          {JSON.stringify(cliente)}\r\n          <br />\r\n          currentId: {JSON.stringify(currentId)}\r\n          <br />\r\n          isModified: {JSON.stringify(isModified)}\r\n        </div>\r\n      */}\r\n      </form>\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}